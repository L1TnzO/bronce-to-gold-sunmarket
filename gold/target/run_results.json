{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.19", "generated_at": "2025-06-11T20:17:50.695082Z", "invocation_id": "e71d5f46-7050-4da3-95f4-1f4146d4c66c", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-11T20:17:49.828812Z", "completed_at": "2025-06-11T20:17:49.836300Z"}, {"name": "execute", "started_at": "2025-06-11T20:17:49.837399Z", "completed_at": "2025-06-11T20:17:50.064817Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.23888468742370605, "adapter_response": {"_message": "SUCCESS 213", "code": "SUCCESS", "rows_affected": 213}, "message": "SUCCESS 213", "failures": null, "unique_id": "model.inventario_analytics.kpi_contribucion_utilidad", "compiled": true, "compiled_code": "\n\nWITH ventas_con_margen AS (\n    SELECT \n        v.codigo_producto,\n        v.descripcion,\n        v.precio,\n        v.cantidad,\n        v.total as ingresos,\n        p.valor_compra,\n        (v.precio - p.valor_compra) as margen_unitario,\n        (v.precio - p.valor_compra) * v.cantidad as contribucion_utilidad,\n        EXTRACT(YEAR_MONTH FROM v.fecha) as periodo_mes\n    FROM `silver_db`.`ventas_limpias` v\n    LEFT JOIN `silver_db`.`productos_master` p ON v.codigo_producto = p.codigo\n    WHERE v.tipo_transaccion = 'VENTA' AND p.codigo IS NOT NULL\n)\n\nSELECT \n    codigo_producto,\n    descripcion,\n    periodo_mes,\n    SUM(cantidad) as unidades_vendidas,\n    SUM(ingresos) as ingresos_totales,\n    AVG(margen_unitario) as margen_unitario_promedio,\n    SUM(contribucion_utilidad) as contribucion_utilidad_total,\n    ROUND(SUM(contribucion_utilidad) / SUM(SUM(contribucion_utilidad)) OVER() * 100, 2) as pct_contribucion_total\nFROM ventas_con_margen\nGROUP BY codigo_producto, descripcion, periodo_mes\nORDER BY contribucion_utilidad_total DESC", "relation_name": "`silver_db`.`kpi_contribucion_utilidad`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-11T20:17:50.070662Z", "completed_at": "2025-06-11T20:17:50.073838Z"}, {"name": "execute", "started_at": "2025-06-11T20:17:50.074695Z", "completed_at": "2025-06-11T20:17:50.190601Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12316322326660156, "adapter_response": {"_message": "SUCCESS 25", "code": "SUCCESS", "rows_affected": 25}, "message": "SUCCESS 25", "failures": null, "unique_id": "model.inventario_analytics.kpi_dias_inventario", "compiled": true, "compiled_code": "\n\nWITH ventas_diarias AS (\n    SELECT\n        codigo_producto,\n        descripcion,\n        DATE(fecha) as fecha_venta,\n        SUM(cantidad) as cantidad_vendida_dia\n    FROM `silver_db`.`ventas_limpias`\n    WHERE tipo_transaccion = 'VENTA'\n    GROUP BY codigo_producto, descripcion, DATE(fecha)\n),\npromedio_ventas AS (\n    SELECT\n        codigo_producto,\n        descripcion,\n        AVG(cantidad_vendida_dia) as venta_promedio_diaria,\n        COUNT(DISTINCT fecha_venta) as dias_con_ventas\n    FROM ventas_diarias\n    GROUP BY codigo_producto, descripcion\n),\ncalculo_dias AS (\n    SELECT\n        p.codigo as codigo_producto,\n        p.descripcion,\n        p.bod_1 as stock_actual,\n        COALESCE(v.venta_promedio_diaria, 0) as venta_promedio_diaria,\n        v.dias_con_ventas,\n        CASE\n            WHEN v.venta_promedio_diaria > 0\n            THEN ROUND(p.bod_1 / v.venta_promedio_diaria, 0)\n            ELSE 999\n        END as dias_inventario_disponible\n    FROM `silver_db`.`productos_master` p\n    LEFT JOIN promedio_ventas v ON p.codigo = v.codigo_producto\n    WHERE p.bod_1 > 0\n)\nSELECT\n    codigo_producto,\n    descripcion,\n    stock_actual,\n    venta_promedio_diaria,\n    dias_con_ventas,\n    dias_inventario_disponible,\n    CASE\n        WHEN dias_inventario_disponible > 90 THEN 'EXCESO'\n        WHEN dias_inventario_disponible BETWEEN 30 AND 90 THEN 'NORMAL'\n        WHEN dias_inventario_disponible BETWEEN 7 AND 29 THEN 'BAJO'\n        WHEN dias_inventario_disponible < 7 THEN 'CRITICO'\n        ELSE 'SIN_VENTAS'\n    END as alerta_stock\nFROM calculo_dias\nORDER BY dias_inventario_disponible ASC", "relation_name": "`silver_db`.`kpi_dias_inventario`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-11T20:17:50.196716Z", "completed_at": "2025-06-11T20:17:50.199864Z"}, {"name": "execute", "started_at": "2025-06-11T20:17:50.200725Z", "completed_at": "2025-06-11T20:17:50.361130Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.16762661933898926, "adapter_response": {"_message": "SUCCESS 25", "code": "SUCCESS", "rows_affected": 25}, "message": "SUCCESS 25", "failures": null, "unique_id": "model.inventario_analytics.kpi_margen_bruto", "compiled": true, "compiled_code": "\n\nWITH productos_con_precios AS (\n    SELECT \n        codigo,\n        descripcion,\n        valor_compra,\n        lista_1 as precio_venta,\n        CASE \n            WHEN lista_1 > 0 \n            THEN ROUND(((lista_1 - valor_compra) / lista_1) * 100, 2)\n            ELSE 0 \n        END as margen_bruto_pct,\n        lista_1 - valor_compra as margen_bruto_absoluto\n    FROM `silver_db`.`productos_master`\n    WHERE lista_1 > 0 AND valor_compra > 0\n)\n\nSELECT \n    codigo,\n    descripcion,\n    valor_compra,\n    precio_venta,\n    margen_bruto_pct,\n    margen_bruto_absoluto,\n    CASE \n        WHEN margen_bruto_pct < 20 THEN 'BAJO'\n        WHEN margen_bruto_pct BETWEEN 20 AND 40 THEN 'MEDIO'\n        ELSE 'ALTO'\n    END as clasificacion_margen\nFROM productos_con_precios\nORDER BY margen_bruto_pct DESC", "relation_name": "`silver_db`.`kpi_margen_bruto`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-11T20:17:50.367718Z", "completed_at": "2025-06-11T20:17:50.370582Z"}, {"name": "execute", "started_at": "2025-06-11T20:17:50.371657Z", "completed_at": "2025-06-11T20:17:50.547722Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.18319916725158691, "adapter_response": {"_message": "SUCCESS 25", "code": "SUCCESS", "rows_affected": 25}, "message": "SUCCESS 25", "failures": null, "unique_id": "model.inventario_analytics.kpi_rotacion_inventario", "compiled": true, "compiled_code": "\n\nWITH ventas_agregadas AS (\n    SELECT\n        codigo_producto,\n        descripcion,\n        SUM(total) as costo_productos_vendidos,\n        COUNT(*) as num_transacciones\n    FROM `silver_db`.`ventas_limpias`\n    WHERE tipo_transaccion = 'VENTA'\n    GROUP BY codigo_producto, descripcion\n),\ninventario_actual AS (\n    SELECT\n        codigo,\n        descripcion,\n        valor_compra * bod_1 as valor_inventario_actual,\n        bod_1 as stock_actual\n    FROM `silver_db`.`productos_master`\n    WHERE bod_1 > 0\n),\ncalculo_rotacion AS (\n    SELECT\n        v.codigo_producto,\n        v.descripcion,\n        v.costo_productos_vendidos,\n        i.valor_inventario_actual as inventario_promedio,\n        CASE\n            WHEN i.valor_inventario_actual > 0\n            THEN ROUND(v.costo_productos_vendidos / i.valor_inventario_actual, 2)\n            ELSE 0\n        END as rotacion_inventario,\n        i.stock_actual,\n        v.num_transacciones\n    FROM ventas_agregadas v\n    LEFT JOIN inventario_actual i ON v.codigo_producto = i.codigo\n    WHERE i.codigo IS NOT NULL\n)\nSELECT\n    codigo_producto,\n    descripcion,\n    costo_productos_vendidos,\n    inventario_promedio,\n    rotacion_inventario,\n    CASE\n        WHEN rotacion_inventario < 2 THEN 'BAJA'\n        WHEN rotacion_inventario BETWEEN 2 AND 6 THEN 'MEDIA'\n        ELSE 'ALTA'\n    END as clasificacion_rotacion,\n    stock_actual,\n    num_transacciones\nFROM calculo_rotacion", "relation_name": "`silver_db`.`kpi_rotacion_inventario`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-11T20:17:50.553915Z", "completed_at": "2025-06-11T20:17:50.557166Z"}, {"name": "execute", "started_at": "2025-06-11T20:17:50.558013Z", "completed_at": "2025-06-11T20:17:50.673762Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.12291145324707031, "adapter_response": {"_message": "SUCCESS 25", "code": "SUCCESS", "rows_affected": 25}, "message": "SUCCESS 25", "failures": null, "unique_id": "model.inventario_analytics.dashboard_kpis_criticos", "compiled": true, "compiled_code": "\n\nSELECT \n    r.codigo_producto,\n    r.descripcion,\n    r.rotacion_inventario,\n    r.clasificacion_rotacion,\n    m.margen_bruto_pct,\n    m.clasificacion_margen,\n    d.dias_inventario_disponible,\n    d.alerta_stock,\n    c.contribucion_utilidad_total,\n    c.pct_contribucion_total,\n    -- Score compuesto para priorizaci\u00f3n\n    CASE \n        WHEN r.rotacion_inventario >= 4 AND m.margen_bruto_pct >= 30 THEN 'ESTRELLA'\n        WHEN r.rotacion_inventario >= 4 AND m.margen_bruto_pct < 30 THEN 'VACA_LECHERA'  \n        WHEN r.rotacion_inventario < 2 AND m.margen_bruto_pct >= 30 THEN 'INCOGNITA'\n        ELSE 'PERRO'\n    END as matriz_bcg\nFROM `silver_db`.`kpi_rotacion_inventario` r\nLEFT JOIN `silver_db`.`kpi_margen_bruto` m ON r.codigo_producto = m.codigo\nLEFT JOIN `silver_db`.`kpi_dias_inventario` d ON r.codigo_producto = d.codigo_producto\nLEFT JOIN (\n    SELECT codigo_producto, \n           SUM(contribucion_utilidad_total) as contribucion_utilidad_total,\n           AVG(pct_contribucion_total) as pct_contribucion_total\n    FROM `silver_db`.`kpi_contribucion_utilidad`\n    GROUP BY codigo_producto\n) c ON r.codigo_producto = c.codigo_producto", "relation_name": "`silver_db`.`dashboard_kpis_criticos`"}], "elapsed_time": 0.9363250732421875, "args": {"log_format": "default", "log_path": "/home/enzo/universidad/tingdatos/taller_3_v2/gold/logs", "printer_width": 80, "exclude": [], "indirect_selection": "eager", "partial_parse_file_diff": true, "enable_legacy_logger": false, "log_file_max_bytes": 10485760, "show_resource_report": false, "select": [], "send_anonymous_usage_stats": true, "macro_debugging": false, "use_colors_file": true, "use_colors": true, "log_format_file": "debug", "project_dir": "/home/enzo/universidad/tingdatos/taller_3_v2/gold", "strict_mode": false, "write_json": true, "require_explicit_package_overrides_for_builtin_materializations": false, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "cache_selected_only": false, "partial_parse": true, "invocation_command": "dbt run", "profiles_dir": "/home/enzo/.dbt", "which": "run", "log_level": "info", "introspect": true, "version_check": true, "log_level_file": "debug", "populate_cache": true, "vars": {}, "print": true, "quiet": false, "defer": false, "favor_state": false}}